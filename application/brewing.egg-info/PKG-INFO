Metadata-Version: 2.4
Name: brewing
Version: 0.1.0
Summary: Brew - AI-powered software development CLI tool
Author-email: Brew Team <team@brew.dev>
License: MIT
Project-URL: Homepage, https://github.com/brew/brewing
Project-URL: Repository, https://github.com/brew/brewing
Project-URL: Issues, https://github.com/brew/brewing/issues
Keywords: ai,development,cli,code-generation
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0.0
Requires-Dist: fastapi>=0.116.1
Requires-Dist: requests>=2.32.4
Requires-Dist: uvicorn>=0.33.0
Requires-Dist: pytest>=6.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: alembic>=1.13.0
Requires-Dist: pydantic>=2.0.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"

# Brewing CLI Tool

Brew is an AI-powered software development CLI tool that helps developers create and manage projects through specifications and AI-assisted code generation.

## Installation

Install the CLI tool:

```bash
task install-cli
```

## Usage

### Initialize a new project

```bash
brewing init
```

This will:

- Prompt you for project details
- Create a `.brewing` directory for project metadata
- Generate a `product.md` specification file

### Start the development environment

```bash
brewing start
```

This will:

- Start a FastAPI REST API server on http://localhost:8000
- Open the API documentation in your browser
- Open your user interface at http://localhost:5173 (expected to be running)
- **Gracefully stop the API server** when you press Ctrl+C

**Note**: The CLI expects you to already be running a user interface on port 5173 (e.g., Vite, Create React App, or any other development server).

## Product Features API

The project includes a FastAPI-based REST API for managing product features with draft and published content support, plus project configuration management.

### Start the API Server

```bash
# Option 1: Using the CLI (recommended)
brewing start

# Option 2: Using the startup script
./start_api.sh

# Option 3: Direct command
uv run python run_api.py

# Option 4: Using uvicorn directly
uv run uvicorn brewing.api:app --host 0.0.0.0 --port 8000 --reload
```

### API Endpoints

#### Project Configuration

- **GET /project** - Get project configuration
- **PUT /project** - Update project configuration

#### Feature Management

- **GET /features** - List all features
- **POST /features** - Create a new feature
- **GET /features/{id}** - Get a single feature
- **PUT /features/{id}** - Update a feature
- **DELETE /features/{id}** - Delete a feature

#### System

- **GET /health** - Health check

### API Documentation

- **Swagger UI**: http://localhost:8000/docs
- **ReDoc**: http://localhost:8000/redoc

### Test the API

```bash
uv run python test_api.py
```

For detailed API documentation, see [API_README.md](API_README.md).

## Requirements

- Python 3.8+
- A user interface running on port 5173 (e.g., Vite, Create React App, etc.)

## Project Structure

After running `brewing init`, your project will have:

```
your-project/
├── .brewing/          # Project metadata directory
│   └── project.json   # Project configuration (created via API)
├── brewing/           # Python package
│   ├── api.py         # FastAPI application
│   ├── cli.py         # CLI commands
│   └── __init__.py
├── start_api.sh       # API startup script
├── run_api.py         # API runner script
├── test_api.py        # API test script
├── API_README.md      # Detailed API documentation
└── product.md         # Product specification
```

## Commands

- `brewing init` - Initialize a new Brew project
- `brewing start` - Start the REST API server and open user interface
- `brewing --version` - Show version information
- `brewing --help` - Show help information

## Features

- Interactive project initialization
- **REST API server management** with graceful shutdown
- **Project configuration management** via API endpoints
- **Browser integration** for API docs and user interface
- Product specification management
- AI-powered development workflow
- **Product Features API** with CRUD operations and draft/published content support

## Development Workflow

1. **Initialize your project**: `brewing init`
2. **Start your user interface** on port 5173 (e.g., `npm run dev` in your frontend project)
3. **Start the API server**: `brewing start`
4. **Configure your project**: Use the `/project` endpoints to set project name and metadata
5. **Access your application**:
   - User Interface: http://localhost:5173
   - API: http://localhost:8000
   - API Docs: http://localhost:8000/docs
6. **Stop the API server**: Press Ctrl+C in the terminal running `brewing start`
